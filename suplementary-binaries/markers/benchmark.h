#include <ucontext.h>
#include <stdio.h>
#include <signal.h>

#define STR(s) #s
#define CCA_MARKER(marker) __asm__ volatile("MOV XZR, " STR(marker))

// Tracing halt and resume using specific opcodes (if supported by architecture)
#define CCA_TRACE_START __asm__ volatile("HLT 0x1337");
#define CCA_TRACE_STOP __asm__ volatile("HLT 0x1337");


// Inference markers
#define CCA_MARKER_START() CCA_MARKER(0x1000);
#define CCA_MARKER_END() CCA_MARKER(0x1001);

#define CCA_MARKER_INFERENCE_INITIALISATION_START() CCA_MARKER(0x2000);
#define CCA_MARKER_INFERENCE_INITIALISATION_END() CCA_MARKER(0x2001);

#define CCA_MARKER_READ_INPUT_START() CCA_MARKER(0x2100);
#define CCA_MARKER_READ_INPUT_STOP() CCA_MARKER(0x2101);

#define CCA_MARKER_READ_INPUT_ADDR_START() CCA_MARKER(0x1800);
#define CCA_MARKER_READ_INPUT_ADDR_STOP() CCA_MARKER(0x1801);

#define CCA_MARKER_NEW_INFERENCE_START() CCA_MARKER(0x2200);
#define CCA_MARKER_NEW_INFERENCE_STOP() CCA_MARKER(0x2201);

#define CCA_MARKER_WRITE_OUTPUT_START() CCA_MARKER(0x2300);
#define CCA_MARKER_WRITE_OUTPUT_STOP() CCA_MARKER(0x2301);

#define CCA_MARKER_UPDATE_STATE_START() CCA_MARKER(0x2400);
#define CCA_MARKER_UPDATE_STATE_STOP() CCA_MARKER(0x2401);

// Realm setup markers
#define CCA_MARKER_CREATION_START() CCA_MARKER(0x2500);
#define CCA_MARKER_CREATION_END() CCA_MARKER(0x2501);

#define CCA_MARKER_CREATION_AFTER_ACTIVATION_START() CCA_MARKER(0x2510);
#define CCA_MARKER_CREATION_AFTER_ACTIVATION_END() CCA_MARKER(0x2511);

#define CCA_MARKER_CREATION_BEFORE_ACTIVATION_START() CCA_MARKER(0x2520);
#define CCA_MARKER_CREATION_BEFORE_ACTIVATION_END() CCA_MARKER(0x2521);

#define CCA_MARKER_DESTRUCTION_START() CCA_MARKER(0x2600);
#define CCA_MARKER_DESTRUCTION_END() CCA_MARKER(0x2601);

#define CCA_MARKER_MEMORY_DELEGATE1_START() CCA_MARKER(0x2710);
#define CCA_MARKER_MEMORY_DELEGATE1_END() CCA_MARKER(0x2711);

#define CCA_MARKER_MEMORY_DELEGATE2_START() CCA_MARKER(0x2720);
#define CCA_MARKER_MEMORY_DELEGATE2_END() CCA_MARKER(0x2721);

#define CCA_MARKER_MEMORY_DELEGATE3_START() CCA_MARKER(0x2730);
#define CCA_MARKER_MEMORY_DELEGATE3_END() CCA_MARKER(0x2741);

#define CCA_MARKER_MEMORY_DELEGATE4_START() CCA_MARKER(0x2740);
#define CCA_MARKER_MEMORY_DELEGATE4_END() CCA_MARKER(0x2741);

#define CCA_MARKER_MEMORY_DELEGATE5_START() CCA_MARKER(0x2750);
#define CCA_MARKER_MEMORY_DELEGATE5_END() CCA_MARKER(0x2751);

#define CCA_MARKER_REALM_VM_START() CCA_MARKER(0x2800);
#define CCA_MARKER_NW_VM_START() CCA_MARKER(0x2810);
#define CCA_MARKER_NW_START() CCA_MARKER(0x2820);
#define CCA_MARKER_REALM_VM_QEMU_START() CCA_MARKER(0x2830);
#define CCA_MARKER_NW_VM_QEMU_START() CCA_MARKER(0x2840);

// RMM trace markers
#define CCA_MARKER_INSIDE_REALM_START() CCA_MARKER(0x1100);
#define CCA_MARKER_INSIDE_REALM_STOP() CCA_MARKER(0x1101);
